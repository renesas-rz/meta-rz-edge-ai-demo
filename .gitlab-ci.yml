stages:
  - build-bsp
  - build-sdk

variables:
  BUILD_DIR: ${CI_PROJECT_DIR}/build
  OUTPUT_DIR: ${CI_PROJECT_DIR}/output
  PROP_LIBS_DIR: ${CI_PROJECT_DIR}/prop_libs
  DL_DIR: ${CI_PROJECT_DIR}/downloads
  SSTATE_DIR: ${CI_PROJECT_DIR}/sstate_cache
  CI_DEMO_REPO: git@gitlab.renesas.solutions/spl2/machine-learning/rzg-foss-ai/rz-edge-ai-demo.git
  CI_DEMO_REPO_BRANCH: master
  CI_DEMO_REPO_PROTOCOL: ssh
  CI_DEMO_REPO_REV: "AUTOREV"

.rzg2:
  variables:
    PROP_LIBS_BRANCH: rzg2_v3.0.1_eval

.rzg2l:
  variables:
    PROP_LIBS_BRANCH: rzg2l_v3.0.1_eval

.hihope-rzg2m:
  extends: [".rzg2"]
  variables:
    PLATFORM: hihope-rzg2m

.ek874:
  extends: [".rzg2"]
  variables:
    PLATFORM: ek874

.smarc-rzg2l:
  extends: [".rzg2l"]
  variables:
    PLATFORM: smarc-rzg2l

.smarc-rzg2lc:
  extends: [".rzg2l"]
  variables:
    PLATFORM: smarc-rzg2lc

.build:
  image: gitlab.renesas.solutions:5050/spl2/continuous-integration/dockerfiles:ubuntu-20.04-latest
  tags:
    - yocto
  before_script:
    - if [ "${CI_COMMIT_TAG}" ]; then unset CI_DEMO_REPO_BRANCH; unset CI_DEMO_REPO_REV; fi
    - printenv
    - rm -rf ${OUTPUT_DIR} ${PROP_LIBS_DIR} ${BUILD_DIR}
    - export BUILD_THREADS=$(($(nproc)/2))
  script:
    - mkdir -p ${OUTPUT_DIR} ${PROP_LIBS_DIR} ${BUILD_DIR}
    - git clone git@gitlab.renesas.solutions:spl2/continuous-integration/proprietary-libs.git ${PROP_LIBS_DIR}
    - pushd ${PROP_LIBS_DIR} && git checkout ${PROP_LIBS_BRANCH} && popd
    - pushd ${BUILD_DIR}
    - ${CI_PROJECT_DIR}/scripts/build.sh -l ${PROP_LIBS_DIR} -p ${PLATFORM} -n ${BUILD_THREADS} -o ${OUTPUT_DIR} -e -s -j ${DL_DIR} -k ${SSTATE_DIR} ${EXTRA_BUILD_ARGS}
  cache:
      - key: "downloads"
        paths:
          - ${DL_DIR}
      - key: "sstate-cache-${PLATFORM}"
        paths:
          - ${SSTATE_DIR}
  artifacts:
    name: "${CI_JOB_NAME}"
    when: always
    expire_in: 1 month
    paths:
      - ${BUILD_DIR}/build/conf/bblayers.conf
      - ${BUILD_DIR}/build/conf/local.conf
      - ${OUTPUT_DIR}/


build_hihope-rzg2m:
  stage: build-bsp
  extends: [".build", ".hihope-rzg2m"]

build_ek874:
  stage: build-bsp
  extends: [".build", ".ek874"]

build_smarc-rzg2l:
  stage: build-bsp
  extends: [".build", ".smarc-rzg2l"]

build_smarc-rzg2lc:
  stage: build-bsp
  extends: [".build", ".smarc-rzg2lc"]


.sdk_rules: &sdk_rules
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_BRANCH
      when: manual
      allow_failure: true
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG
      when: always

sdk_hihope-rzg2m:
  stage: build-sdk
  extends: [".build", ".hihope-rzg2m"]
  needs: []
  variables:
    EXTRA_BUILD_ARGS: -T
  <<: *sdk_rules

sdk_ek874:
  stage: build-sdk
  extends: [".build", ".ek874"]
  needs: []
  variables:
    EXTRA_BUILD_ARGS: -T
  <<: *sdk_rules

sdk_smarc-rzg2l:
  stage: build-sdk
  extends: [".build", ".smarc-rzg2l"]
  needs: []
  variables:
    EXTRA_BUILD_ARGS: -T
  <<: *sdk_rules

sdk_smarc-rzg2lc:
  stage: build-sdk
  extends: [".build", ".smarc-rzg2lc"]
  needs: []
  variables:
    EXTRA_BUILD_ARGS: -T
  <<: *sdk_rules

